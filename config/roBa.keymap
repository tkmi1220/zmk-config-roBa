#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        ps1: ps1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(J) &kp N1 &kp L &kp N3 &kp K &kp N2 &kp L &kp N3 &kp LS(J) &kp N1>;
            label = "PS1";
        };

        pass2: pass2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp A &kp K &kp U &kp LS(T) &kp A &kp K &kp U &kp N1 &kp N2 &kp N2 &kp N0>;
            label = "PASS2";
        };

        id: id {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp N6 &kp N2 &kp N3 &kp N0 &kp N5 &kp N8>;
            label = "ID";
        };

        move: move {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp O &kp V &kp E &kp RET>;
            label = "MOVE";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp P &kp Y &kp RET>;
            label = "COPY";
        };

        stretch: stretch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp RET>;
            label = "STRETCH";
        };

        cloudmark: cloudmark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp E &kp V &kp C &kp L &kp O &kp U &kp D &kp RET &kp E &kp RET>;
            label = "CLOUDMARK";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q   &kp W   &kp E  &kp R               &kp T                                        &kp Y          &kp U        &kp I      &kp O    &kp P
&kp A   &kp S   &kp D  &lt_to_layer_0 4 F  &kp G        &trans              &kp ESCAPE  &kp H          &kp J        &kp K      &kp L    &kp MINUS
&kp Z   &kp X   &kp C  &kp V               &kp B        &trans              &kp DELETE  &kp N          &mt LCTRL M  &kp COMMA  &kp DOT  &kp SLASH
&trans  &trans  &mo 6  &kp CAPSLOCK        &lt 2 SPACE  &kp LEFT_SHIFT      &kp ENTER   &kp BACKSPACE                                   &kp LA(ENTER)
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&trans          &trans          &kp UP_ARROW    &trans           &trans                      &trans  &kp N7        &kp N8        &kp N9        &trans
&trans          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans      &trans  &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans
&kp LEFT_SHIFT  &trans          &trans          &trans           &trans  &trans      &trans  &kp N0  &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_SHIFT
&trans          &trans          &trans          &trans           &trans  &trans      &trans  &trans                                            &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&kp ESCAPE  &kp DELETE  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans      &trans      &mo 5   &trans  &trans  &trans      &trans  &trans  &move     &copy     &stretch  &trans
&trans      &trans      &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans      &trans      &trans  &trans  &trans  &trans      &trans  &trans                                &cloudmark
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans     &trans  &trans  &trans                      &trans  &trans    &trans    &trans  &trans
&trans  &kp LCTRL  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans     &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4  &mkp MB5  &trans  &trans
&trans  &trans     &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &id           &ps1          &pass2        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
